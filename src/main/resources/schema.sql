CREATE TABLE IF NOT EXISTS USERS
(
    user_id  int generated by default as identity primary key,
    email    varchar(100) not null,
    login    varchar(100) not null,
    name     varchar(100) not null,
    birthday date         not null
);

CREATE TABLE IF NOT EXISTS MPA
(
    mpa_id int generated by default as identity primary key,
    name   varchar(10) not null
);

CREATE TABLE IF NOT EXISTS FILMS
(
    film_id      int generated by default as identity primary key,
    name         varchar(100) not null,
    description  varchar(200) not null,
    release_date date         not null,
    duration     double       not null
);

CREATE TABLE IF NOT EXISTS MPA_FILMS
(
    mpa_id  int not null,
    film_id int not null,
    constraint fk_mpa_to_mpa_id foreign key (mpa_id) references MPA (mpa_id),
    constraint fk_film_mpa_to_film_id foreign key (film_id) references FILMS (film_id)
);

CREATE TABLE IF NOT EXISTS GENRES
(
    genre_id int generated by default as identity primary key,
    name     varchar(50) not null
);

CREATE TABLE IF NOT EXISTS FIlM_GENRES
(
    film_id  int not null,
    genre_id int not null,
    constraint fk_film_to_genre foreign key (film_id) references FILMS (film_id),
    constraint fk_genre_to_genre foreign key (genre_id) references GENRES (genre_id)
);

CREATE TABLE IF NOT EXISTS LIKES
(
    user_id int not null,
    film_id int not null,
    constraint fk_user_likes foreign key (user_id) references USERS (user_id),
    constraint fk_film_likes foreign key (film_id) references FILMS (film_id)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP
(
    user_id   int     not null,
    friend_id int     not null,
    active    boolean not null default false,
    constraint fk_user_friendship foreign key (user_id) references USERS (user_id),
    constraint fk_user_friend_friendship foreign key (user_id) references USERS (user_id)
);